// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: message_content.proto

package protoim

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 聊天消息内容
type MessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogId      string            `protobuf:"bytes,1,opt,name=dialog_id,json=dialogId,proto3" json:"dialog_id,omitempty"`                                            // 会话ID( d_{user_id}_{chat_type}_{to_id} )
	MessageId     string            `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                                         // 消息ID( m_{xxx} )(服务端生成)
	FromId        string            `protobuf:"bytes,3,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`                                                  // 发送者(用户ID)
	ToId          string            `protobuf:"bytes,4,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`                                                        // 接收者(用户ID/群ID)
	Pts           int32             `protobuf:"varint,5,opt,name=pts,proto3" json:"pts,omitempty"`                                                                     // 当前会话的序列ID(可用于排序)(唯一值)(服务端生成)
	ChatTypeId    ChatType          `protobuf:"varint,6,opt,name=chat_type_id,json=chatTypeId,proto3,enum=protoim.ChatType" json:"chat_type_id,omitempty"`             // 私聊还是群聊
	MessageTypeId MessageType       `protobuf:"varint,7,opt,name=message_type_id,json=messageTypeId,proto3,enum=protoim.MessageType" json:"message_type_id,omitempty"` // 消息类型
	LatestTime    int64             `protobuf:"varint,8,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty"`                                     // 最近发生的时间戳(以服务端接收到的时间为准)
	IsRead        bool              `protobuf:"varint,9,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`                                                 // 是否已读
	TextContent   string            `protobuf:"bytes,10,opt,name=text_content,json=textContent,proto3" json:"text_content,omitempty"`                                  // 消息本文内容
	Entity        *MessageEntityUri `protobuf:"bytes,11,opt,name=entity,proto3" json:"entity,omitempty"`                                                               // 对消息内容需要做跳转的转换 (如：url 地址)
	Media         *MessageMedia     `protobuf:"bytes,12,opt,name=media,proto3" json:"media,omitempty"`                                                                 // 消息媒体 (图片、文件、语音文件、视频文件)
	Thumbnail     *MessageMedia     `protobuf:"bytes,13,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`                                                         // 缩略图
	Mmap          *MessageMap       `protobuf:"bytes,14,opt,name=mmap,proto3" json:"mmap,omitempty"`                                                                   // 地理位置消息
	RedPacket     *MessageRedPacket `protobuf:"bytes,15,opt,name=red_packet,json=redPacket,proto3" json:"red_packet,omitempty"`                                        // 红包消息
}

func (x *MessageContent) Reset() {
	*x = MessageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContent) ProtoMessage() {}

func (x *MessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_message_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContent.ProtoReflect.Descriptor instead.
func (*MessageContent) Descriptor() ([]byte, []int) {
	return file_message_content_proto_rawDescGZIP(), []int{0}
}

func (x *MessageContent) GetDialogId() string {
	if x != nil {
		return x.DialogId
	}
	return ""
}

func (x *MessageContent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageContent) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *MessageContent) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *MessageContent) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *MessageContent) GetChatTypeId() ChatType {
	if x != nil {
		return x.ChatTypeId
	}
	return ChatType_CT_USE
}

func (x *MessageContent) GetMessageTypeId() MessageType {
	if x != nil {
		return x.MessageTypeId
	}
	return MessageType_M_TEXT
}

func (x *MessageContent) GetLatestTime() int64 {
	if x != nil {
		return x.LatestTime
	}
	return 0
}

func (x *MessageContent) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *MessageContent) GetTextContent() string {
	if x != nil {
		return x.TextContent
	}
	return ""
}

func (x *MessageContent) GetEntity() *MessageEntityUri {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *MessageContent) GetMedia() *MessageMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *MessageContent) GetThumbnail() *MessageMedia {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *MessageContent) GetMmap() *MessageMap {
	if x != nil {
		return x.Mmap
	}
	return nil
}

func (x *MessageContent) GetRedPacket() *MessageRedPacket {
	if x != nil {
		return x.RedPacket
	}
	return nil
}

var File_message_content_proto protoreflect.FileDescriptor

var file_message_content_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d,
	0x1a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd4, 0x04, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x74, 0x73,
	0x12, 0x33, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x72, 0x69, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x12, 0x33, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x6d, 0x61, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x6d, 0x6d, 0x61, 0x70, 0x12, 0x38,
	0x0a, 0x0a, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x09, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_content_proto_rawDescOnce sync.Once
	file_message_content_proto_rawDescData = file_message_content_proto_rawDesc
)

func file_message_content_proto_rawDescGZIP() []byte {
	file_message_content_proto_rawDescOnce.Do(func() {
		file_message_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_content_proto_rawDescData)
	})
	return file_message_content_proto_rawDescData
}

var file_message_content_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_content_proto_goTypes = []interface{}{
	(*MessageContent)(nil),   // 0: protoim.MessageContent
	(ChatType)(0),            // 1: protoim.ChatType
	(MessageType)(0),         // 2: protoim.MessageType
	(*MessageEntityUri)(nil), // 3: protoim.MessageEntityUri
	(*MessageMedia)(nil),     // 4: protoim.MessageMedia
	(*MessageMap)(nil),       // 5: protoim.MessageMap
	(*MessageRedPacket)(nil), // 6: protoim.MessageRedPacket
}
var file_message_content_proto_depIdxs = []int32{
	1, // 0: protoim.MessageContent.chat_type_id:type_name -> protoim.ChatType
	2, // 1: protoim.MessageContent.message_type_id:type_name -> protoim.MessageType
	3, // 2: protoim.MessageContent.entity:type_name -> protoim.MessageEntityUri
	4, // 3: protoim.MessageContent.media:type_name -> protoim.MessageMedia
	4, // 4: protoim.MessageContent.thumbnail:type_name -> protoim.MessageMedia
	5, // 5: protoim.MessageContent.mmap:type_name -> protoim.MessageMap
	6, // 6: protoim.MessageContent.red_packet:type_name -> protoim.MessageRedPacket
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_message_content_proto_init() }
func file_message_content_proto_init() {
	if File_message_content_proto != nil {
		return
	}
	file_chat_type_proto_init()
	file_message_type_proto_init()
	file_message_entity_uri_proto_init()
	file_message_media_proto_init()
	file_message_map_proto_init()
	file_message_red_packet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_content_proto_goTypes,
		DependencyIndexes: file_message_content_proto_depIdxs,
		MessageInfos:      file_message_content_proto_msgTypes,
	}.Build()
	File_message_content_proto = out.File
	file_message_content_proto_rawDesc = nil
	file_message_content_proto_goTypes = nil
	file_message_content_proto_depIdxs = nil
}
